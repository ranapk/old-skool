{"version":3,"sources":["Desktop/Taskbar.js","Desktop/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["buttonStyle","fontWeight","width","timerStyle","display","justifyContent","alignItems","border","height","boxShadow","alignText","Taskbar","props","useState","moment","utc","add","format","time","setTime","setInterval","console","log","className","style","Dashboard","GlobalStyles","createGlobalStyle","ms_sans_serif","ms_sans_serif_bold","styleReset","App","theme","original","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAsBA,IAAMA,EAAc,CAClBC,WAAY,OACZC,MAAO,MAEHC,EAAa,CACjBD,MAAO,MACPE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,MACRC,OAAQ,OACRC,UAAW,qCACXC,UAAW,UAEEC,EAhCf,SAAiBC,GAAQ,IAAD,EACEC,mBACtBC,IAAOC,MAAMC,IAAI,EAAG,KAAKA,IAAI,GAAI,KAAKC,OAAO,YAFzB,mBACfC,EADe,KACTC,EADS,KAQtB,OAJAC,aAAY,WACVD,EAAQL,IAAOC,MAAMC,IAAI,EAAG,KAAKA,IAAI,GAAI,KAAKC,OAAO,cACpD,KACHI,QAAQC,IAAIJ,GAEV,eAAC,IAAD,CAASK,UAAU,yBAAnB,UACE,cAAC,IAAD,CAAQC,MAAOxB,EAAf,mBACA,qBAAKwB,MAAOrB,EAAZ,SACE,4BAAIe,UCNGO,I,EAAAA,EARf,SAAmBb,GACjB,OACE,qBAAKW,UAAU,YAAf,SACE,0CCMAG,EAAeC,YAAH,+UAGJC,IAMAC,IAOZC,KAcaC,MAZf,WACE,OACE,sBAAKR,UAAU,iBAAf,UACE,cAACG,EAAD,IACA,eAAC,IAAD,CAAeM,MAAOC,IAAtB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCvBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f0fcfe2.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Cutout, Toolbar } from \"react95\";\r\nimport \"../Styles/App.css\";\r\nfunction Taskbar(props) {\r\n  const [time, setTime] = useState(\r\n    moment.utc().add(5, \"h\").add(30, \"m\").format(\"hh:mm A\")\r\n  );\r\n  setInterval(() => {\r\n    setTime(moment.utc().add(5, \"h\").add(30, \"m\").format(\"hh:mm A\"));\r\n  }, 1000);\r\n  console.log(time);\r\n  return (\r\n    <Toolbar className=\"taskbar old-border-box\">\r\n      <Button style={buttonStyle}>Start</Button>\r\n      <div style={timerStyle}>\r\n        <p>{time}</p>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nconst buttonStyle = {\r\n  fontWeight: \"bold\",\r\n  width: \"5%\",\r\n};\r\nconst timerStyle = {\r\n  width: \"10%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  border: \"2px\",\r\n  height: \"100%\",\r\n  boxShadow: \"inset 2px 2px 2px rgb(0 0 0 / 40%)\",\r\n  alignText: \"center\",\r\n};\r\nexport default Taskbar;\r\n","import React from \"react\";\r\n\r\nfunction Dashboard(props) {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>{`Hello`}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { styleReset } from \"react95\";\n\nimport original from \"react95/dist/themes/original\";\n\nimport ms_sans_serif from \"react95/dist/fonts/ms_sans_serif.woff2\";\nimport ms_sans_serif_bold from \"react95/dist/fonts/ms_sans_serif_bold.woff2\";\nimport Taskbar from \"./Desktop/Taskbar\";\nimport Dashboard from \"./Desktop/Dashboard\";\nimport './Styles/App.css'\nconst GlobalStyles = createGlobalStyle`\n@font-face {\n  font-family: 'ms_sans_serif';\n  src: url('${ms_sans_serif}') format('woff2');\n  font-weight: 400;\n  font-style: normal\n}\n@font-face {\n  font-family: 'ms_sans_serif';\n  src: url('${ms_sans_serif_bold}') format('woff2');\n  font-weight: bold;\n  font-style: normal\n}\nbody {\n  font-family: 'ms_sans_serif';\n}\n${styleReset}\n`;\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      <GlobalStyles />\n      <ThemeProvider theme={original}>\n        <Dashboard />\n        <Taskbar />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}